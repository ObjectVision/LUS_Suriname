//**********************************************************************************************************************************************************************************************
//**                                                                                                                                                                                          **
//**                                                Configuration written for Suriname Land Use Modelling project, 2012                                                                       **
//**                                                                                                                                                                                          **
//**********************************************************************************************************************************************************************************************
//**                                                                                                                                                                                          **
//**                                     In this configurationfile the suitability maps of the endogenous land use classes for the high population scenario is defined                        **
//**                                                                                                                                                                                          **
//**  Basislogic                                                                                                                                                                              **
//**   * first attractive (+), then unattractive (-)                                                                                                                                          **
//**   * start with including current landuse (whenever relevant                                                                                                                              **
//**                                                                                                                                                                                          **
//**********************************************************************************************************************************************************************************************

container high_population
{
	// agriculture_scattered
	container agriculture_scattered
	{
		attribute<dollar_ha> CurrentLanduse (Geography/Suriname250mGrid) := 
			float32(1.0) * (Landuse/model == classifications/LU/luModel/v/agriculture_scattered
				? value(3000, dollar_ha)
				: value(   0, dollar_ha));

		attribute<dollar_ha> neighbourhood (Geography/Suriname250mGrid) :=  
			  float32(2.0) * DistanceDecay/LandUse/pot_km1/agricultural_scattered * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/builtup * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/agricultural_large_scale * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/agricultural_small_scale * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/agricultural_wet * 500[dollar_ha]
			+ float32(1.0) * DistanceDecay/LandUse/pot_km1/forest * 500[dollar_ha]
			+ float32(0.5) * DistanceDecay/LandUse/pot_km1/swamp_savanna_forest * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/open_area * 500[dollar_ha]
			+ float32(1.5) * DistanceDecay/LandUse/pot_km5/agricultural_scattered * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/builtup * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_large_scale * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_small_scale * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_wet * 500[dollar_ha]
			+ float32(0.5) * DistanceDecay/LandUse/pot_km5/forest * 500[dollar_ha]
			+ float32(0.5) * DistanceDecay/LandUse/pot_km5/swamp_savanna_forest * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/open_area * 500[dollar_ha];

		attribute<dollar_ha> accessibility (Geography/Suriname250mGrid) := 
			  float32(2.0) * (max_elem(500[dollar_ha] - value( 2.5, dollar_ha) * Present/accessibility/River_major, 0[dollar_ha]))
			+ float32(2.0) * (max_elem(500[dollar_ha] - value( 2.5, dollar_ha) * Present/accessibility/River_minor, 0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(10  , dollar_ha) * Present/accessibility/Road_major,  0[dollar_ha]))
			+ float32(0.5) * (max_elem(500[dollar_ha] - value(10  , dollar_ha) * Present/accessibility/Road_minor,  0[dollar_ha]))
			+ float32(-1.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/Town,        0[dollar_ha]))
			+ float32(2.5) * (max_elem(500[dollar_ha] - value( 2.5, dollar_ha) * Present/accessibility/Village,     0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/materials,   0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/airport,     0[dollar_ha]));
			

		attribute<dollar_ha> physical (Geography/Suriname250mGrid) := 
			  float32(0.0) * value(100,dollar_ha_degree) * Present/physical/slope 
			+ float32(0.0) * value(  1, dollar_ha_m)   * Present/physical/elevation
			+ float32(2.0) * (Classifications/soiltypes/total/agricultural_scattered[Present/physical/soil] * 500[dollar_ha]);

		attribute<dollar_ha> material (Geography/Suriname250mGrid) :=  
			  float32(-1.0) *  (500[dollar_ha] * float32(Present/material/goud == TRUE))
			+ float32(-1.0) *  (500[dollar_ha] * float32(Present/material/bauxiet == TRUE))
			+ float32(0.0) *  (500[dollar_ha] * float32(Present/material/timber == TRUE));
		
		attribute<dollar_ha> policy (Geography/Suriname250mGrid) :=  
			  float32(0.0) *  (value(1000, dollar_ha) * float32(Present/policy/protected == TRUE));

		attribute<dollar_ha> total (Geography/Suriname250mGrid) :=  CurrentLandUse + neighbourhood + accessibility + physical + material + policy;
	}

	// builtup
	container builtup
	{
		attribute<dollar_ha> CurrentLanduse (Geography/Suriname250mGrid) := 
			float32(1.0) *  (Landuse/model == classifications/LU/luModel/v/builtup
				? value(7500, dollar_ha)
				: value(   0, dollar_ha));

		attribute<dollar_ha> neighbourhood (Geography/Suriname250mGrid) :=  
			  float32(0.0) * DistanceDecay/LandUse/pot_km1/agricultural_scattered * 500[dollar_ha]
			+ float32(2.0) * DistanceDecay/LandUse/pot_km1/builtup * 500[dollar_ha]
			+ float32(-1.0) * DistanceDecay/LandUse/pot_km1/agricultural_large_scale * 500[dollar_ha]
			+ float32(0.2) * DistanceDecay/LandUse/pot_km1/agricultural_small_scale * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/agricultural_wet * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/forest * 500[dollar_ha]
			+ float32(-2.0) * DistanceDecay/LandUse/pot_km1/swamp_savanna_forest * 500[dollar_ha]
			+ float32(0.5) * DistanceDecay/LandUse/pot_km1/open_area * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_scattered * 500[dollar_ha]
			+ float32(2.0) * DistanceDecay/LandUse/pot_km5/builtup * 500[dollar_ha]
			+ float32(1.0) * DistanceDecay/LandUse/pot_km5/agricultural_large_scale * 500[dollar_ha]
			+ float32(0.2) * DistanceDecay/LandUse/pot_km5/agricultural_small_scale * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_wet * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/forest * 500[dollar_ha]
			+ float32(-2.0) * DistanceDecay/LandUse/pot_km5/swamp_savanna_forest * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/open_area * 500[dollar_ha];

		attribute<dollar_ha> accessibility (Geography/Suriname250mGrid) := 
			  float32(0.5) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/River_major, 0[dollar_ha]))
			+ float32(0.3) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/River_minor, 0[dollar_ha]))
			+ float32(2.5) * (max_elem(500[dollar_ha] - value(10  , dollar_ha) * Present/accessibility/Road_major,  0[dollar_ha]))
			+ float32(2.5) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/Road_minor,  0[dollar_ha]))
			+ float32(1.0) * (max_elem(500[dollar_ha] - value(10  , dollar_ha) * Present/accessibility/Town,        0[dollar_ha]))
			+ float32(1.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/Village,     0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(10  , dollar_ha) * Present/accessibility/materials,   0[dollar_ha]))
			+ float32(0.7) * (max_elem(500[dollar_ha] - value( 5  , dollar_ha) * Present/accessibility/airport,     0[dollar_ha]));
			

		attribute<dollar_ha> physical (Geography/Suriname250mGrid) := 
			  float32(-1.0) * value(500,dollar_ha_degree) * Present/physical/slope 
			+ float32(0.0) * value(  1, dollar_ha_m)   * Present/physical/elevation
			+ float32(1.0) * (Classifications/soiltypes/total/builtup[Present/physical/soil] * 500[dollar_ha]); 

		attribute<dollar_ha> material (Geography/Suriname250mGrid) :=  
			  float32(0.7) *  (500[dollar_ha] * float32(Present/material/goud == TRUE))
			+ float32(0.2) *  (500[dollar_ha] * float32(Present/material/bauxiet == TRUE))
			+ float32(0.5) *  (500[dollar_ha] * float32(Present/material/timber == TRUE));
		
		attribute<dollar_ha> policy (Geography/Suriname250mGrid) :=  
			  float32(-2.0) *  (value(1000, dollar_ha) * float32(Present/policy/protected == TRUE));

		attribute<dollar_ha> total (Geography/Suriname250mGrid) :=  CurrentLandUse + neighbourhood + accessibility + physical + material + policy;
	}

	// LANDBOUW GROOTSCHALIG
	container agricultural_large_scale
	{
		attribute<dollar_ha> CurrentLanduse (Geography/Suriname250mGrid) := 
			float32(1.0) * (Landuse/model == classifications/LU/luModel/v/agricultural_large_scale
				? value(5000, dollar_ha)
				: value(   0, dollar_ha));

		attribute<dollar_ha> neighbourhood (Geography/Suriname250mGrid) :=  
			  float32(0.0) * DistanceDecay/LandUse/pot_km1/agricultural_scattered * 500[dollar_ha]
			+ float32(2.0) * DistanceDecay/LandUse/pot_km1/builtup * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/agricultural_large_scale * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/agricultural_small_scale * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/agricultural_wet * 500[dollar_ha]
			+ float32(2.0) * DistanceDecay/LandUse/pot_km1/forest * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/swamp_savanna_forest * 500[dollar_ha]
			+ float32(2.0) * DistanceDecay/LandUse/pot_km1/open_area * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_scattered * 500[dollar_ha]
			+ float32(2.0) * DistanceDecay/LandUse/pot_km5/builtup * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_large_scale * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_small_scale * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_wet * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/forest * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/swamp_savanna_forest * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/open_area * 500[dollar_ha];

		attribute<dollar_ha> accessibility (Geography/Suriname250mGrid) := 
			  float32(2.0) * (max_elem(500[dollar_ha] - value(10  , dollar_ha) * Present/accessibility/River_major, 0[dollar_ha]))
			+ float32(2.0) * (max_elem(500[dollar_ha] - value(10  , dollar_ha) * Present/accessibility/River_minor, 0[dollar_ha]))
			+ float32(1.5) * (max_elem(500[dollar_ha] - value( 5  , dollar_ha) * Present/accessibility/Road_major,  0[dollar_ha]))
			+ float32(0.5) * (max_elem(500[dollar_ha] - value(10  , dollar_ha) * Present/accessibility/Road_minor,  0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value( 2.5, dollar_ha) * Present/accessibility/Town,        0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(10  , dollar_ha) * Present/accessibility/Village,     0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/materials,   0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/airport,     0[dollar_ha]));

		attribute<dollar_ha> physical (Geography/Suriname250mGrid) := 
			  float32(-2.0) * value(500,dollar_ha_degree) * Present/physical/slope 
			+ float32(-2.0) * value(  1, dollar_ha_m)   * Present/physical/elevation
			+ float32(2.0) * (Classifications/soiltypes/total/agricultural_large_scale[Present/physical/soil]* 500[dollar_ha]);

		attribute<dollar_ha> material (Geography/Suriname250mGrid) := 
			  float32(-2.0) * (500[dollar_ha] * float32(Present/material/goud == TRUE))
			+ float32(-2.0) * (500[dollar_ha] * float32(Present/material/bauxiet == TRUE))
			+ float32(-2.0) * (500[dollar_ha] * float32(Present/material/timber == TRUE));
			
		attribute<dollar_ha> policy (Geography/Suriname250mGrid) :=  
			  float32(-2.0) * (value(1000, dollar_ha) * float32(Present/policy/protected == TRUE));

		attribute<dollar_ha> total (Geography/Suriname250mGrid) :=  CurrentLandUse + neighbourhood + accessibility + physical + material + policy;
	}

	// LANDBOUW KLEINSCHALIG
	container agricultural_small_scale
	{
		attribute<dollar_ha> CurrentLanduse (Geography/Suriname250mGrid) := 
			float32(1.0) * (Landuse/model == classifications/LU/luModel/agricultural_small_scale
				? value(2000, dollar_ha)
				: value(   0, dollar_ha));

		attribute<dollar_ha> neighbourhood (Geography/Suriname250mGrid) :=  
			  float32(0.0) * DistanceDecay/LandUse/pot_km1/agricultural_scattered * 500[dollar_ha]
			+ float32(-2.0) * DistanceDecay/LandUse/pot_km1/builtup * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/agricultural_large_scale * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/agricultural_small_scale * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/agricultural_wet * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/forest * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/swamp_savanna_forest * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/open_area * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_scattered * 500[dollar_ha]
			+ float32(-2.0) * DistanceDecay/LandUse/pot_km5/builtup * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_large_scale * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_small_scale * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_wet * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/forest * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/swamp_savanna_forest * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/open_area * 500[dollar_ha];

		attribute<dollar_ha> accessibility (Geography/Suriname250mGrid) := 
			  float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/River_major, 0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/River_minor, 0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value( 2.5, dollar_ha) * Present/accessibility/Road_major,  0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value( 2.5, dollar_ha) * Present/accessibility/Road_minor,  0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value( 2.5, dollar_ha) * Present/accessibility/Town,        0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value( 2.5, dollar_ha) * Present/accessibility/Village,     0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/materials,   0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/airport,     0[dollar_ha]));

		attribute<dollar_ha> physical (Geography/Suriname250mGrid) :=  
			  float32(0.0) * value(250,dollar_ha_degree) * Present/physical/slope 
			+ float32(0.0) * value(  1, dollar_ha_m)     * Present/physical/elevation
			+ float32(0.0) * (Classifications/soiltypes/total/agricultural_small_scale[Present/physical/soil] * 500[dollar_ha]);

		attribute<dollar_ha> material (Geography/Suriname250mGrid) := 
			  float32(0.0) * (500[dollar_ha] * float32(Present/material/goud == TRUE))
			+ float32(0.0) * (500[dollar_ha] * float32(Present/material/bauxiet == TRUE))
			+ float32(0.0) * (500[dollar_ha] * float32(Present/material/timber == TRUE));
			
		attribute<dollar_ha> policy (Geography/Suriname250mGrid) := 
			  float32(0.0) * (value(1000, dollar_ha) * float32(Present/policy/protected == TRUE));

		attribute<dollar_ha> total (Geography/Suriname250mGrid) :=  CurrentLandUse + neighbourhood + accessibility + physical + material + policy;
	}

	// LANDBOUW NAT
	container agricultural_wet
	{
		attribute<dollar_ha> CurrentLanduse (Geography/Suriname250mGrid) := 
			float32(1.0) * (Landuse/model == classifications/LU/luModel/agricultural_wet
				? value(5000, dollar_ha)
				: value(   0, dollar_ha));

		attribute<dollar_ha> neighbourhood (Geography/Suriname250mGrid) :=  
			  float32(0.0) * DistanceDecay/LandUse/pot_km1/agricultural_scattered * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/builtup * 500[dollar_ha]
			+ float32(0.8) * DistanceDecay/LandUse/pot_km1/agricultural_large_scale * 500[dollar_ha]
			+ float32(0.5) * DistanceDecay/LandUse/pot_km1/agricultural_small_scale * 500[dollar_ha]
			+ float32(1.0) * DistanceDecay/LandUse/pot_km1/agricultural_wet * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/forest * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/swamp_savanna_forest * 500[dollar_ha]
			+ float32(1.0) * DistanceDecay/LandUse/pot_km1/open_area * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_scattered * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/builtup * 500[dollar_ha]
			+ float32(0.5) * DistanceDecay/LandUse/pot_km5/agricultural_large_scale * 500[dollar_ha]
			+ float32(0.2) * DistanceDecay/LandUse/pot_km5/agricultural_small_scale * 500[dollar_ha]
			+ float32(1.0) * DistanceDecay/LandUse/pot_km5/agricultural_wet * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/forest * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/swamp_savanna_forest * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/open_area * 500[dollar_ha];	

		attribute<dollar_ha> accessibility (Geography/Suriname250mGrid) := 
			  float32(1.0) * (max_elem(500[dollar_ha] - value( 5  , dollar_ha) * Present/accessibility/River_major, 0[dollar_ha]))
			+ float32(0.7) * (max_elem(500[dollar_ha] - value( 5  , dollar_ha) * Present/accessibility/River_minor, 0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value( 5  , dollar_ha) * Present/accessibility/Road_major,  0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(10  , dollar_ha) * Present/accessibility/Road_minor,  0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value( 2.5, dollar_ha) * Present/accessibility/Town,        0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(10  , dollar_ha) * Present/accessibility/Village,     0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/materials,   0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/airport,     0[dollar_ha]));

		attribute<dollar_ha> physical (Geography/Suriname250mGrid) := 
			  float32(-1.0) * value(1000,dollar_ha_degree) * Present/physical/slope 
			+ float32(-1.0) * value(  10, dollar_ha_m)   * Present/physical/elevation
			+ float32(2.0) * (Classifications/soiltypes/total/agricultural_wet[Present/physical/soil] * 500[dollar_ha]);

		attribute<dollar_ha> material (Geography/Suriname250mGrid) := 
			  float32(0.0) * (500[dollar_ha] * float32(Present/material/goud == TRUE))
			+ float32(0.0) * (500[dollar_ha] * float32(Present/material/bauxiet == TRUE))
			+ float32(0.0) * (500[dollar_ha] * float32(Present/material/timber == TRUE));
			
		attribute<dollar_ha> policy (Geography/Suriname250mGrid) :=  
			 float32(0.0) * (value(1000, dollar_ha) * float32(Present/policy/protected == TRUE));

		attribute<dollar_ha> total (Geography/Suriname250mGrid) :=  CurrentLandUse + neighbourhood + accessibility + physical + material + policy;
	}

	// forest
	container forest
	{
		attribute<dollar_ha> CurrentLanduse (Geography/Suriname250mGrid) := 
			float32(1.0) * (Landuse/model == classifications/LU/luModel/forest
				? value(2500, dollar_ha)
				: value(   0, dollar_ha));

		attribute<dollar_ha> neighbourhood (Geography/Suriname250mGrid) :=  
			  float32(0.0) * DistanceDecay/LandUse/pot_km1/agricultural_scattered * 500[dollar_ha]
			+ float32(-2.0) * DistanceDecay/LandUse/pot_km1/builtup * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/agricultural_large_scale * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/agricultural_small_scale * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/agricultural_wet * 500[dollar_ha]
			+ float32(2.0) * DistanceDecay/LandUse/pot_km1/forest * 500[dollar_ha]
			+ float32(-1.0) * DistanceDecay/LandUse/pot_km1/swamp_savanna_forest * 500[dollar_ha]
			+ float32(-2.0) * DistanceDecay/LandUse/pot_km1/open_area * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_scattered * 500[dollar_ha]
			+ float32(-1.0) * DistanceDecay/LandUse/pot_km5/builtup * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_large_scale * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_small_scale * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_wet * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/forest * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/swamp_savanna_forest * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/open_area * 500[dollar_ha];

		attribute<dollar_ha> accessibility (Geography/Suriname250mGrid) := 
		      float32(2.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/River_major, 0[dollar_ha]))
			+ float32(2.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/River_minor, 0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/Road_major,  0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/Road_minor,  0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/Town,        0[dollar_ha]))
			+ float32(1.0) * (max_elem(500[dollar_ha] - value(10  , dollar_ha) * Present/accessibility/Village,     0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/materials,   0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/airport,     0[dollar_ha]));

		attribute<dollar_ha> physical (Geography/Suriname250mGrid) :=  
			  float32(1.0) * value( 50,dollar_ha_degree) * Present/physical/slope 
			+ float32(1.0) * value(  1, dollar_ha_m)   * Present/physical/elevation
			+ float32(2.0) * (Classifications/soiltypes/total/forest[Present/physical/soil] * 500[dollar_ha]);

		attribute<dollar_ha> material (Geography/Suriname250mGrid) := 
			  float32(0.0) * (500[dollar_ha] * float32(Present/material/goud == TRUE))
			+ float32(0.0) * (500[dollar_ha] * float32(Present/material/bauxiet == TRUE))
			+ float32(0.0) * (500[dollar_ha] * float32(Present/material/timber == TRUE));

		attribute<dollar_ha> policy (Geography/Suriname250mGrid) :=  
			 float32(0.0) * value(1000, dollar_ha) * float32(Present/policy/protected == TRUE);

		attribute<dollar_ha> total (Geography/Suriname250mGrid) :=  CurrentLandUse + neighbourhood + accessibility + physical + material + policy;
	}

	// MOERAS SAVANNE forest
	container swamp_savanna_forest
	{
		attribute<dollar_ha> CurrentLanduse (Geography/Suriname250mGrid) := 
			float32(1.0) * (Landuse/model == classifications/LU/luModel/swamp_savanna_forest
				? value(2500, dollar_ha)
				: value(   0, dollar_ha));

		attribute<dollar_ha> neighbourhood (Geography/Suriname250mGrid) :=  
			  float32(0.0) * DistanceDecay/LandUse/pot_km1/agricultural_scattered * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/builtup * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/agricultural_large_scale * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/agricultural_small_scale * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/agricultural_wet * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/forest * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/swamp_savanna_forest * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/open_area * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_scattered * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/builtup * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_large_scale * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_small_scale * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_wet * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/forest * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/swamp_savanna_forest * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/open_area * 500[dollar_ha];

		attribute<dollar_ha> accessibility (Geography/Suriname250mGrid) := 
			  float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/River_major, 0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/River_minor, 0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/Road_major,  0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/Road_minor,  0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/Town,        0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/Village,     0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/materials,   0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/airport,     0[dollar_ha]));

		attribute<dollar_ha> physical (Geography/Suriname250mGrid) :=  
			  float32(0.0) * value( 50,dollar_ha_degree) * Present/physical/slope 
			+ float32(0.0) * value(  1, dollar_ha_m)     * Present/physical/elevation
			+ float32(0.0) * (Classifications/soiltypes/total/swamp_savanna_forest[Present/physical/soil] * 500[dollar_ha]);

		attribute<dollar_ha> material (Geography/Suriname250mGrid) :=  
			  float32(0.0) * 500[dollar_ha] * float32(Present/material/goud == TRUE)
			+ float32(0.0) * 500[dollar_ha] * float32(Present/material/bauxiet == TRUE)
			+ float32(0.0) * 500[dollar_ha] * float32(Present/material/timber == TRUE);

		attribute<dollar_ha> policy (Geography/Suriname250mGrid) :=  
			 float32(0.0) * value(1000, dollar_ha) * float32(Present/policy/protected == TRUE);

		attribute<dollar_ha> total (Geography/Suriname250mGrid) :=  CurrentLandUse + neighbourhood + accessibility + physical + material + policy;
	}

	// OPEN GEBIED
	container open_area
	{
		attribute<dollar_ha> CurrentLanduse (Geography/Suriname250mGrid) := 
			float32(1.0) * (Landuse/model == classifications/LU/luModel/open_area
				? value( 500, dollar_ha)
				: value(   0, dollar_ha));

		attribute<dollar_ha> neighbourhood (Geography/Suriname250mGrid) :=  
			  float32(0.5) * DistanceDecay/LandUse/pot_km1/agricultural_scattered * 500[dollar_ha]
			+ float32(1.0) * DistanceDecay/LandUse/pot_km1/builtup * 500[dollar_ha]
			+ float32(0.5) * DistanceDecay/LandUse/pot_km1/agricultural_large_scale * 500[dollar_ha]
			+ float32(0.5) * DistanceDecay/LandUse/pot_km1/agricultural_small_scale * 500[dollar_ha]
			+ float32(0.5) * DistanceDecay/LandUse/pot_km1/agricultural_wet * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km1/forest * 500[dollar_ha]
			+ float32(0.5) * DistanceDecay/LandUse/pot_km1/swamp_savanna_forest * 500[dollar_ha]
			+ float32(0.5) * DistanceDecay/LandUse/pot_km1/open_area * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_scattered * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/builtup * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_large_scale * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_small_scale * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/agricultural_wet * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/forest * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/swamp_savanna_forest * 500[dollar_ha]
			+ float32(0.0) * DistanceDecay/LandUse/pot_km5/open_area * 500[dollar_ha];

		attribute<dollar_ha> accessibility (Geography/Suriname250mGrid) := 
			  float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/River_major, 0[dollar_ha]))
			+ float32(0.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/River_minor, 0[dollar_ha]))
			+ float32(1.5) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/Road_major,  0[dollar_ha]))
			+ float32(0.5) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/Road_minor,  0[dollar_ha]))
			+ float32(1.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/Town,        0[dollar_ha]))
			+ float32(0.5) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/Village,     0[dollar_ha]))
			+ float32(1.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/materials,   0[dollar_ha]))
			+ float32(2.0) * (max_elem(500[dollar_ha] - value(50  , dollar_ha) * Present/accessibility/airport,     0[dollar_ha]));

		attribute<dollar_ha> physical (Geography/Suriname250mGrid) := 
			  float32(2.0) * value( 50,dollar_ha_degree) * Present/physical/slope 
			+ float32(0.0) * value(  1, dollar_ha_m)   * Present/physical/elevation
			+ float32(1.0) * (Classifications/soiltypes/total/open_area[Present/physical/soil] * 500[dollar_ha]);

		attribute<dollar_ha> material (Geography/Suriname250mGrid) :=  
			  float32(3.0) * 500[dollar_ha] * float32(Present/material/goud == TRUE)
			+ float32(1.5) * 500[dollar_ha] * float32(Present/material/bauxiet == TRUE)
			+ float32(0.5) * 500[dollar_ha] * float32(Present/material/timber == TRUE);

		attribute<dollar_ha> policy (Geography/Suriname250mGrid) :=  
			 float32(-1.0) * value(1000, dollar_ha) * float32(Present/policy/protected == TRUE);

		attribute<dollar_ha> total (Geography/Suriname250mGrid) :=  CurrentLanduse + neighbourhood + accessibility + physical + material + policy;
	}

	// MAXIMALE GESCHIKTHEID
	attribute<Classifications/LU/luEndogenous> lu_max_suit(Geography/Suriname250mGrid) :=  
		='value(
			 argmax(
				' + AsItemList(Classifications/LU/luEndogenous/name +'/total') +'
			 )
			,Classifications/LU/luEndogenous
		)';
}